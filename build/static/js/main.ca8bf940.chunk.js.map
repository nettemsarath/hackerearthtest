{"version":3,"sources":["helpers/getRandomColor.js","components/Bargraph.js","components/Piegraph.js","components/CustomGraph.js","components/Graph.js","services/chartData.js","slices/charts.js","App.js","store/index.js","index.js"],"names":["getRandomColor","color","i","Math","floor","random","Bargraph","data","title","graphData","map","chartdata","value","style","display","justifyContent","alignItems","BarChart","width","height","margin","top","right","left","bottom","XAxis","dataKey","fontFamily","tickSize","dy","YAxis","hide","Bar","barSize","entry","Cell","fill","Piegraph","PieChart","Pie","valueKey","cx","cy","innerRadius","outerRadius","paddingAngle","index","CustomGraph","useDispatch","customchartData","useSelector","state","charts","console","log","Graph","loading","error","length","type","elements","TESTDATA","fetchChartData","a","config","headers","axios","get","process","fetchUsersData","createAsyncThunk","chartSlice","createSlice","name","initialState","reducers","addItem","action","payload","push","removeItem","filter","id","extraReducers","pending","fulfilled","rejected","actions","App","dispatch","useEffect","className","fontSize","store","configureStore","reducer","chartReducer","devTools","ReactDOM","render","document","getElementById"],"mappings":"iQAAMA,EAAiB,WAGrB,IAFA,IACIC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAHc,mBAGGE,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOJ,G,QCiCMK,EAnCE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAClBC,EAAYF,EAAKG,KAAI,SAACC,GAC1B,MAAO,CACLC,MAAOD,EACPV,MAAOD,QAGX,OACE,sBACEa,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,UAOE,oCAAOR,EAAP,OACA,eAACS,EAAA,EAAD,CACEC,MAAO,IACPC,OAAQ,IACRZ,KAAME,EACNW,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,KAAM,EAAGC,OAAQ,IAJjD,UAME,cAACC,EAAA,EAAD,CAAOC,QAAQ,QAAQC,WAAW,aAAaC,UAAQ,EAACC,GAAG,OAC3D,cAACC,EAAA,EAAD,CAAOC,MAAI,IAEX,cAACC,EAAA,EAAD,CAAKN,QAAQ,QAAQO,QAAS,GAAIN,WAAW,aAA7C,SACGlB,EAAUC,KAAI,SAACwB,GAAD,OACb,cAACC,EAAA,EAAD,CAAMC,KAAMF,EAAMjC,oB,kBCYfoC,EAvCE,SAAC,GAAqB,IAAnB9B,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAClBC,EAAYF,EAAKG,KAAI,SAACC,GAC1B,MAAO,CACLC,MAAOD,EACPV,MAAOD,QAIX,OACE,sBACEa,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAJhB,UAOE,oCAAOR,EAAP,OAEA,cAAC8B,EAAA,EAAD,CAAUpB,MAAO,IAAKC,OAAQ,IAA9B,SACE,cAACoB,EAAA,EAAD,CACEb,QAAQ,QACRc,SAAS,QACTjC,KAAME,EACNgC,GAAI,IACJC,GAAI,IACJC,YAAa,GACbC,YAAa,GACbR,KAAK,UACLS,aAAc,EAThB,SAWGpC,EAAUC,KAAI,SAACwB,EAAOY,GAAR,OACb,cAACX,EAAA,EAAD,CAA4BC,KAAMF,EAAMjC,OAAxC,eAAmB6C,e,QCvBhBC,EARK,WACDC,cAAjB,IACmBC,EAAoBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAA5DzC,UAGR,OAFA0C,QAAQC,IAAI,kBAAmBL,GAExB,kDCqCMM,EAvCD,WAEZ,MAAsCL,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAA3DzC,EAAR,EAAQA,UAAW6C,EAAnB,EAAmBA,QAAnB,EAA4BC,MAE5B,OADAJ,QAAQC,IAAI,4BAA6B3C,GACrC6C,EACK,6CAIP,gCACG7C,EAAU+C,SAAWF,EACpB,8BACG7C,EAAUD,KAAI,SAACC,EAAWmC,GACzB,MAAuB,QAAnBnC,EAAUgD,KAEV,cAAC,EAAD,CAEEpD,KAAMI,EAAUiD,SAChBpD,MAAM,aAFDsC,GAKmB,QAAnBnC,EAAUgD,KAEjB,cAAC,EAAD,CAEEpD,KAAMI,EAAUiD,SAChBpD,MAAM,aAFDsC,GAMJ,UAGT,KACJ,cAAC,EAAD,Q,2DCtCAe,EAAW,CACf,CACEF,KAAM,MACNC,SAAU,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,IAE7B,CACED,KAAM,MACNC,SAAU,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,IAE7B,CACED,KAAM,MACNC,SAAU,CAAC,GAAI,KAEjB,CACED,KAAM,MACNC,SAAU,CAAC,GAAI,GAAI,KAErB,CACED,KAAM,MACNC,SAAU,CAAC,EAAG,EAAG,EAAG,EAAG,IAEzB,CACED,KAAM,MACNC,SAAU,CAAC,GAAI,GAAI,GAAI,KAEzB,CACED,KAAM,MACNC,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,KAE7B,CACED,KAAM,MACNC,SAAU,CAAC,GAAI,GAAI,GAAI,GAAI,KAE7B,CACED,KAAM,MACNC,SAAU,CAAC,GAAI,GAAI,MAIjBE,EAAc,uCAAG,4BAAAC,EAAA,sEAEbC,EAAS,CACbC,QAAS,CACP,8BAA+B,MAJhB,SAOAC,IAAMC,IAhDTC,+CAgD0BJ,GAPvB,uCAQZH,GARY,oGAAH,qDCvCPQ,EAAiBC,YAAiB,aAAD,sBAAe,4BAAAP,EAAA,sEACxCD,IADwC,cACrDvD,EADqD,yBAEpDA,GAFoD,4CAWvDgE,EAAaC,YAAY,CAC7BC,KAAM,SACNC,aARkB,CAClBlB,SAAS,EACT7C,UAAW,GACX8C,OAAO,GAMPkB,SAAU,CACRC,QAAS,SAACzB,EAAO0B,GACfxB,QAAQC,IAAI,iBAAkBuB,EAAOC,SACrC3B,EAAMxC,UAAUoE,KAAKF,EAAOC,UAE9BE,WAAY,SAAC7B,EAAO0B,GAClB1B,EAAMxC,UAAUsE,QAAO,SAAC1E,GAAD,OAAUA,EAAK2E,KAAOL,EAAOC,QAAQI,QAGhEC,eAAa,mBACVd,EAAee,SADL,SACcjC,EAAO0B,GAC9B1B,EAAMK,SAAU,KAFP,cAIVa,EAAegB,WAJL,SAIgBlC,EAAO0B,GAChC1B,EAAMK,SAAU,EAChBL,EAAMxC,UAAYkE,EAAOC,WANhB,cAQVT,EAAeiB,UARL,SAQenC,EAAO0B,GAC/B1B,EAAMK,SAAU,EAChBL,EAAMM,OAAQ,KAVL,KAeAc,IAAf,QAEO,EAAgCA,EAAWgB,QAA3C,EAAQX,QAAR,EAAiBI,WCnBTQ,MAff,WACE,IAAMC,EAAWzC,cAIjB,OAHA0C,qBAAU,WACRD,EAASpB,OACR,IAED,sBAAKsB,UAAU,MAAf,UACE,qBAAK9E,MAAO,CAAE+E,SAAU,OAAQ3F,MAAO,SAAvC,SACE,yCAEF,cAAC,EAAD,QCVS4F,EANDC,YAAe,CAC3BC,QAAS,CACP3C,OAAQ4C,GAEVC,UAAU,ICCZC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.ca8bf940.chunk.js","sourcesContent":["const getRandomColor = () => {\n  const letters = \"0123456789ABCDEF\";\n  let color = \"#\";\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nexport { getRandomColor };\n","import React from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, Cell } from \"recharts\";\nimport { getRandomColor } from \"helpers/getRandomColor\";\n\nconst Bargraph = ({ data, title }) => {\n  const graphData = data.map((chartdata) => {\n    return {\n      value: chartdata,\n      color: getRandomColor(),\n    };\n  });\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div> {title} </div>\n      <BarChart\n        width={500}\n        height={250}\n        data={graphData}\n        margin={{ top: 25, right: 10, left: 0, bottom: 25 }}\n      >\n        <XAxis dataKey=\"value\" fontFamily=\"sans-serif\" tickSize dy=\"25\" />\n        <YAxis hide />\n\n        <Bar dataKey=\"value\" barSize={20} fontFamily=\"sans-serif\">\n          {graphData.map((entry) => (\n            <Cell fill={entry.color} />\n          ))}\n        </Bar>\n      </BarChart>\n    </div>\n  );\n};\n\nexport default Bargraph;\n","import React from \"react\";\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport { getRandomColor } from \"helpers/getRandomColor\";\n\nconst Piegraph = ({ data, title }) => {\n  const graphData = data.map((chartdata) => {\n    return {\n      value: chartdata,\n      color: getRandomColor(),\n    };\n  });\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div> {title} </div>\n\n      <PieChart width={600} height={400}>\n        <Pie\n          dataKey=\"value\"\n          valueKey=\"value\"\n          data={graphData}\n          cx={120}\n          cy={200}\n          innerRadius={60}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          paddingAngle={5}\n        >\n          {graphData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={entry.color} />\n          ))}\n        </Pie>\n      </PieChart>\n    </div>\n  );\n};\n\nexport default Piegraph;\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst CustomGraph = () => {\n  const dispatch = useDispatch();\n  const { chartdata: customchartData } = useSelector((state) => state.charts);\n  console.log(\"customchartData\", customchartData);\n\n  return <div>CustomGraph...</div>;\n};\n\nexport default CustomGraph;\n","import React from \"react\";\nimport Bargraph from \"./Bargraph\";\nimport Piegraph from \"./Piegraph\";\n// import useChartData from \"hooks/useChartData\";\nimport CustomGraph from \"./CustomGraph\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Graph = () => {\n  // const [loading, data, error] = useChartData();\n  const { chartdata, loading, error } = useSelector((state) => state.charts);\n  console.log(\"chartData...chartData....\", chartdata);\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      {chartdata.length && !loading ? (\n        <div>\n          {chartdata.map((chartdata, index) => {\n            if (chartdata.type === \"Bar\") {\n              return (\n                <Bargraph\n                  key={index}\n                  data={chartdata.elements}\n                  title=\"Bar Graph\"\n                />\n              );\n            } else if (chartdata.type === \"Pie\") {\n              return (\n                <Piegraph\n                  key={index}\n                  data={chartdata.elements}\n                  title=\"Pie Graph\"\n                />\n              );\n            }\n            return null;\n          })}\n        </div>\n      ) : null}\n      <CustomGraph />\n    </div>\n  );\n};\n\nexport default Graph;\n","import axios from \"axios\";\nconst FETCHAPIURL = process.env.REACT_APP_TESTFETCHAPIURL;\n\nconst TESTDATA = [\n  {\n    type: \"Bar\",\n    elements: [1, 9, 15, 3, 7, 9],\n  },\n  {\n    type: \"Bar\",\n    elements: [1, 9, 15, 3, 7, 9],\n  },\n  {\n    type: \"Pie\",\n    elements: [50, 50],\n  },\n  {\n    type: \"Pie\",\n    elements: [25, 25, 50],\n  },\n  {\n    type: \"Bar\",\n    elements: [1, 2, 3, 4, 5],\n  },\n  {\n    type: \"Pie\",\n    elements: [10, 20, 30, 40],\n  },\n  {\n    type: \"Pie\",\n    elements: [20, 20, 20, 20, 20],\n  },\n  {\n    type: \"Bar\",\n    elements: [20, 20, 20, 20, 20],\n  },\n  {\n    type: \"Bar\",\n    elements: [25, 25, 50],\n  },\n];\n\nconst fetchChartData = async () => {\n  try {\n    const config = {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n    const data = await axios.get(FETCHAPIURL, config);\n    return TESTDATA;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport { fetchChartData };\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchChartData } from \"services/chartData\";\n\nexport const fetchUsersData = createAsyncThunk(\"charts/get\", async () => {\n  const data = await fetchChartData();\n  return data;\n});\n\nconst initialData = {\n  loading: false,\n  chartdata: [],\n  error: false,\n};\n\nconst chartSlice = createSlice({\n  name: \"charts\",\n  initialState: initialData,\n  reducers: {\n    addItem: (state, action) => {\n      console.log(\"action.payload\", action.payload);\n      state.chartdata.push(action.payload);\n    },\n    removeItem: (state, action) => {\n      state.chartdata.filter((data) => data.id !== action.payload.id);\n    },\n  },\n  extraReducers: {\n    [fetchUsersData.pending](state, action) {\n      state.loading = true;\n    },\n    [fetchUsersData.fulfilled](state, action) {\n      state.loading = false;\n      state.chartdata = action.payload;\n    },\n    [fetchUsersData.rejected](state, action) {\n      state.loading = false;\n      state.error = true;\n    },\n  },\n});\n\nexport default chartSlice.reducer;\n\nexport const { addItem, removeItem } = chartSlice.actions;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Graph from \"components/Graph\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchUsersData } from \"slices/charts\";\n// import { addItem, removeItem, getChartData } from \"slices/charts\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchUsersData());\n  }, []);\n  return (\n    <div className=\"App\">\n      <div style={{ fontSize: \"40px\", color: \"black\" }}>\n        <b>Graphs</b>\n      </div>\n      <Graph />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport chartReducer from \"slices/charts\";\n\nconst store = configureStore({\n  reducer: {\n    charts: chartReducer,\n  },\n  devTools: true,\n});\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}