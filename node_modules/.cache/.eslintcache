[{"/home/sarath/React-learn/hackerearthtask/src/index.js":"1","/home/sarath/React-learn/hackerearthtask/src/App.js":"2","/home/sarath/React-learn/hackerearthtask/src/store/index.js":"3","/home/sarath/React-learn/hackerearthtask/src/slices/charts.js":"4","/home/sarath/React-learn/hackerearthtask/src/components/Graph.js":"5","/home/sarath/React-learn/hackerearthtask/src/components/Bargraph.js":"6","/home/sarath/React-learn/hackerearthtask/src/components/Piegraph.js":"7","/home/sarath/React-learn/hackerearthtask/src/components/CustomGraph.js":"8","/home/sarath/React-learn/hackerearthtask/src/services/chartData.js":"9","/home/sarath/React-learn/hackerearthtask/src/helpers/getRandomColor.js":"10"},{"size":287,"mtime":1638044226873,"results":"11","hashOfConfig":"12"},{"size":574,"mtime":1638054908278,"results":"13","hashOfConfig":"12"},{"size":213,"mtime":1638048053234,"results":"14","hashOfConfig":"12"},{"size":1513,"mtime":1638059754477,"results":"15","hashOfConfig":"12"},{"size":1718,"mtime":1638059303054,"results":"16","hashOfConfig":"12"},{"size":1673,"mtime":1638059514706,"results":"17","hashOfConfig":"12"},{"size":1659,"mtime":1638059530050,"results":"18","hashOfConfig":"12"},{"size":681,"mtime":1638057440067,"results":"19","hashOfConfig":"12"},{"size":920,"mtime":1638046156115,"results":"20","hashOfConfig":"12"},{"size":225,"mtime":1638038466338,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q16y3u",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sarath/React-learn/hackerearthtask/src/index.js",[],"/home/sarath/React-learn/hackerearthtask/src/App.js",["46","47"],"import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Graph from \"components/Graph\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { fetchUsersData } from \"slices/charts\";\n// import { addItem, removeItem, getChartData } from \"slices/charts\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchUsersData());\n  }, []);\n  return (\n    <div className=\"App\">\n      <div style={{ fontSize: \"40px\", color: \"black\" }}>\n        <b>Graphs</b>\n      </div>\n      <Graph />\n    </div>\n  );\n}\n\nexport default App;\n","/home/sarath/React-learn/hackerearthtask/src/store/index.js",[],"/home/sarath/React-learn/hackerearthtask/src/slices/charts.js",[],"/home/sarath/React-learn/hackerearthtask/src/components/Graph.js",["48"],"import React from \"react\";\nimport Bargraph from \"./Bargraph\";\nimport Piegraph from \"./Piegraph\";\n// import useChartData from \"hooks/useChartData\";\nimport CustomGraph from \"./CustomGraph\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateItem } from \"slices/charts\";\n\nconst Graph = () => {\n  // const [loading, data, error] = useChartData();\n  const dispatch = useDispatch();\n  const { chartdata, loading, error } = useSelector((state) => state.charts);\n  const handleUpdateGraphItem = (newItem) => {\n    console.log(\"newItem newItem newItem\", newItem);\n    dispatch(updateItem(newItem));\n  };\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      {chartdata.length && !loading ? (\n        <div>\n          {chartdata.map((chartdata, index) => {\n            if (chartdata.type === \"Bar\") {\n              return (\n                <Bargraph\n                  key={index}\n                  type={chartdata.type}\n                  id={chartdata.id}\n                  graphData={chartdata.elements}\n                  title=\"Bar Graph\"\n                  handleUpdateGraphItem={handleUpdateGraphItem}\n                />\n              );\n            } else if (chartdata.type === \"Pie\") {\n              return (\n                <Piegraph\n                  key={index}\n                  type={chartdata.type}\n                  id={chartdata.id}\n                  graphData={chartdata.elements}\n                  title=\"Pie Graph\"\n                  handleUpdateGraphItem={handleUpdateGraphItem}\n                />\n              );\n            }\n            return null;\n          })}\n        </div>\n      ) : null}\n      <CustomGraph />\n    </div>\n  );\n};\n\nexport default Graph;\n","/home/sarath/React-learn/hackerearthtask/src/components/Bargraph.js",[],"/home/sarath/React-learn/hackerearthtask/src/components/Piegraph.js",[],"/home/sarath/React-learn/hackerearthtask/src/components/CustomGraph.js",["49","50","51"],"import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateItem } from \"slices/charts\";\n\nconst CustomGraph = () => {\n  const dispatch = useDispatch();\n  const { chartdata: customchartData } = useSelector((state) => state.charts);\n  console.log(\"customchartData\", customchartData);\n  useEffect(() => {\n    const newItem = {\n      id: 1,\n      type: \"Bar\",\n      elements: [\n        { value: 1, color: \"#1CCCD0\" },\n        { value: 9, color: \"#9ECD71\" },\n        { value: 9, color: \"#E32F05\" },\n      ],\n    };\n    // dispatch(updateItem(newItem));\n  }, []);\n\n  return <div>CustomGraph...</div>;\n};\n\nexport default CustomGraph;\n","/home/sarath/React-learn/hackerearthtask/src/services/chartData.js",["52"],"import axios from \"axios\";\nconst FETCHAPIURL = process.env.REACT_APP_TESTFETCHAPIURL;\n\nconst TESTDATA = [\n  {\n    type: \"Bar\",\n    elements: [1, 9, 15, 3, 7, 9],\n  },\n  {\n    type: \"Bar\",\n    elements: [1, 9, 15, 3, 7, 9],\n  },\n  {\n    type: \"Pie\",\n    elements: [50, 50],\n  },\n  {\n    type: \"Pie\",\n    elements: [25, 25, 50],\n  },\n  {\n    type: \"Bar\",\n    elements: [1, 2, 3, 4, 5],\n  },\n  {\n    type: \"Pie\",\n    elements: [10, 20, 30, 40],\n  },\n  {\n    type: \"Pie\",\n    elements: [20, 20, 20, 20, 20],\n  },\n  {\n    type: \"Bar\",\n    elements: [20, 20, 20, 20, 20],\n  },\n  {\n    type: \"Bar\",\n    elements: [25, 25, 50],\n  },\n];\n\nconst fetchChartData = async () => {\n  try {\n    const config = {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    };\n    const data = await axios.get(FETCHAPIURL, config);\n    return TESTDATA;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport { fetchChartData };\n","/home/sarath/React-learn/hackerearthtask/src/helpers/getRandomColor.js",[],{"ruleId":"53","severity":1,"message":"54","line":5,"column":23,"nodeType":"55","messageId":"56","endLine":5,"endColumn":34},{"ruleId":"57","severity":1,"message":"58","line":14,"column":6,"nodeType":"59","endLine":14,"endColumn":8,"suggestions":"60"},{"ruleId":"53","severity":1,"message":"61","line":12,"column":31,"nodeType":"55","messageId":"56","endLine":12,"endColumn":36},{"ruleId":"53","severity":1,"message":"62","line":4,"column":10,"nodeType":"55","messageId":"56","endLine":4,"endColumn":20},{"ruleId":"53","severity":1,"message":"63","line":7,"column":9,"nodeType":"55","messageId":"56","endLine":7,"endColumn":17},{"ruleId":"53","severity":1,"message":"64","line":11,"column":11,"nodeType":"55","messageId":"56","endLine":11,"endColumn":18},{"ruleId":"53","severity":1,"message":"65","line":50,"column":11,"nodeType":"55","messageId":"56","endLine":50,"endColumn":15},"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["66"],"'error' is assigned a value but never used.","'updateItem' is defined but never used.","'dispatch' is assigned a value but never used.","'newItem' is assigned a value but never used.","'data' is assigned a value but never used.",{"desc":"67","fix":"68"},"Update the dependencies array to be: [dispatch]",{"range":"69","text":"70"},[385,387],"[dispatch]"]