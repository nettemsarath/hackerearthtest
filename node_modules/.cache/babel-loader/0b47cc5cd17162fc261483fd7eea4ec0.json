{"ast":null,"code":"import _defineProperty from\"/home/sarath/React-learn/hackerearthtask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/home/sarath/React-learn/hackerearthtask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/sarath/React-learn/hackerearthtask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _extraReducers;import{createSlice,createAsyncThunk}from\"@reduxjs/toolkit\";import{fetchChartData}from\"services/chartData\";export var fetchUsersData=createAsyncThunk(\"charts/get\",/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchChartData();case 2:data=_context.sent;return _context.abrupt(\"return\",data);case 4:case\"end\":return _context.stop();}}},_callee);})));var initialData={loading:false,chartdata:[],error:false};var chartSlice=createSlice({name:\"charts\",initialState:initialData,reducers:{addItem:function addItem(state,action){console.log(\"action.payload\",action.payload);state.chartdata.push(action.payload);},removeItem:function removeItem(state,action){state.chartdata.filter(function(data){return data.id!==action.payload.id;});}},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,fetchUsersData.pending,function(state,action){state.loading=true;}),_defineProperty(_extraReducers,fetchUsersData.fulfilled,function(state,action){state.loading=false;state.chartdata=action.payload;}),_defineProperty(_extraReducers,fetchUsersData.rejected,function(state,action){state.loading=false;state.error=true;}),_extraReducers)});export default chartSlice.reducer;var _chartSlice$actions=chartSlice.actions,addItem=_chartSlice$actions.addItem,removeItem=_chartSlice$actions.removeItem;export{addItem,removeItem};","map":{"version":3,"sources":["/home/sarath/React-learn/hackerearthtask/src/slices/charts.js"],"names":["createSlice","createAsyncThunk","fetchChartData","fetchUsersData","data","initialData","loading","chartdata","error","chartSlice","name","initialState","reducers","addItem","state","action","console","log","payload","push","removeItem","filter","id","extraReducers","pending","fulfilled","rejected","reducer","actions"],"mappings":"+eAAA,OAASA,WAAT,CAAsBC,gBAAtB,KAA8C,kBAA9C,CACA,OAASC,cAAT,KAA+B,oBAA/B,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAGF,gBAAgB,CAAC,YAAD,sEAAe,kKACxCC,CAAAA,cAAc,EAD0B,QACrDE,IADqD,+CAEpDA,IAFoD,wDAAf,GAAvC,CAKP,GAAMC,CAAAA,WAAW,CAAG,CAClBC,OAAO,CAAE,KADS,CAElBC,SAAS,CAAE,EAFO,CAGlBC,KAAK,CAAE,KAHW,CAApB,CAMA,GAAMC,CAAAA,UAAU,CAAGT,WAAW,CAAC,CAC7BU,IAAI,CAAE,QADuB,CAE7BC,YAAY,CAAEN,WAFe,CAG7BO,QAAQ,CAAE,CACRC,OAAO,CAAE,iBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC1BC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAA8BF,MAAM,CAACG,OAArC,EACAJ,KAAK,CAACP,SAAN,CAAgBY,IAAhB,CAAqBJ,MAAM,CAACG,OAA5B,EACD,CAJO,CAKRE,UAAU,CAAE,oBAACN,KAAD,CAAQC,MAAR,CAAmB,CAC7BD,KAAK,CAACP,SAAN,CAAgBc,MAAhB,CAAuB,SAACjB,IAAD,QAAUA,CAAAA,IAAI,CAACkB,EAAL,GAAYP,MAAM,CAACG,OAAP,CAAeI,EAArC,EAAvB,EACD,CAPO,CAHmB,CAY7BC,aAAa,mDACVpB,cAAc,CAACqB,OADL,UACcV,KADd,CACqBC,MADrB,CAC6B,CACtCD,KAAK,CAACR,OAAN,CAAgB,IAAhB,CACD,CAHU,iCAIVH,cAAc,CAACsB,SAJL,UAIgBX,KAJhB,CAIuBC,MAJvB,CAI+B,CACxCD,KAAK,CAACR,OAAN,CAAgB,KAAhB,CACAQ,KAAK,CAACP,SAAN,CAAkBQ,MAAM,CAACG,OAAzB,CACD,CAPU,iCAQVf,cAAc,CAACuB,QARL,UAQeZ,KARf,CAQsBC,MARtB,CAQ8B,CACvCD,KAAK,CAACR,OAAN,CAAgB,KAAhB,CACAQ,KAAK,CAACN,KAAN,CAAc,IAAd,CACD,CAXU,iBAZgB,CAAD,CAA9B,CA2BA,cAAeC,CAAAA,UAAU,CAACkB,OAA1B,CAEO,wBAAgClB,UAAU,CAACmB,OAA3C,CAAQf,OAAR,qBAAQA,OAAR,CAAiBO,UAAjB,qBAAiBA,UAAjB,C","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchChartData } from \"services/chartData\";\n\nexport const fetchUsersData = createAsyncThunk(\"charts/get\", async () => {\n  const data = await fetchChartData();\n  return data;\n});\n\nconst initialData = {\n  loading: false,\n  chartdata: [],\n  error: false,\n};\n\nconst chartSlice = createSlice({\n  name: \"charts\",\n  initialState: initialData,\n  reducers: {\n    addItem: (state, action) => {\n      console.log(\"action.payload\", action.payload);\n      state.chartdata.push(action.payload);\n    },\n    removeItem: (state, action) => {\n      state.chartdata.filter((data) => data.id !== action.payload.id);\n    },\n  },\n  extraReducers: {\n    [fetchUsersData.pending](state, action) {\n      state.loading = true;\n    },\n    [fetchUsersData.fulfilled](state, action) {\n      state.loading = false;\n      state.chartdata = action.payload;\n    },\n    [fetchUsersData.rejected](state, action) {\n      state.loading = false;\n      state.error = true;\n    },\n  },\n});\n\nexport default chartSlice.reducer;\n\nexport const { addItem, removeItem } = chartSlice.actions;\n"]},"metadata":{},"sourceType":"module"}