{"ast":null,"code":"var _jsxFileName = \"/home/sarath/React-learn/hackerearthtask/src/components/Bargraph.js\";\nimport React from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, Cell } from \"recharts\";\nimport { getRandomColor } from \"helpers/getRandomColor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Bargraph = _ref => {\n  let {\n    data,\n    title\n  } = _ref;\n  const graphData = data.map(chartdata => {\n    return {\n      value: chartdata,\n      color: getRandomColor()\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 500,\n      height: 250,\n      data: graphData,\n      margin: {\n        top: 25,\n        right: 10,\n        left: 0,\n        bottom: 25\n      },\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"value\",\n        fontFamily: \"sans-serif\",\n        tickSize: true,\n        dy: \"25\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        hide: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"value\",\n        barSize: 20,\n        fontFamily: \"sans-serif\",\n        children: graphData.map(entry => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: entry.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Bargraph;\nexport default Bargraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bargraph\");","map":{"version":3,"sources":["/home/sarath/React-learn/hackerearthtask/src/components/Bargraph.js"],"names":["React","BarChart","Bar","XAxis","YAxis","Cell","getRandomColor","Bargraph","data","title","graphData","map","chartdata","value","color","display","justifyContent","alignItems","top","right","left","bottom","entry"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,IAAtC,QAAkD,UAAlD;AACA,SAASC,cAAT,QAA+B,wBAA/B;;;AAEA,MAAMC,QAAQ,GAAG,QAAqB;AAAA,MAApB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAoB;AACpC,QAAMC,SAAS,GAAGF,IAAI,CAACG,GAAL,CAAUC,SAAD,IAAe;AACxC,WAAO;AACLC,MAAAA,KAAK,EAAED,SADF;AAELE,MAAAA,KAAK,EAAER,cAAc;AAFhB,KAAP;AAID,GALiB,CAAlB;AAMA,sBACE;AACE,IAAA,KAAK,EAAE;AACLS,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,UAAU,EAAE;AAHP,KADT;AAAA,4BAOE;AAAA,sBAAOR,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,QAAD;AACE,MAAA,KAAK,EAAE,GADT;AAEE,MAAA,MAAM,EAAE,GAFV;AAGE,MAAA,IAAI,EAAEC,SAHR;AAIE,MAAA,MAAM,EAAE;AAAEQ,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,KAAK,EAAE,EAAlB;AAAsBC,QAAAA,IAAI,EAAE,CAA5B;AAA+BC,QAAAA,MAAM,EAAE;AAAvC,OAJV;AAAA,8BAME,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,OAAf;AAAuB,QAAA,UAAU,EAAC,YAAlC;AAA+C,QAAA,QAAQ,MAAvD;AAAwD,QAAA,EAAE,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,KAAD;AAAO,QAAA,IAAI;AAAX;AAAA;AAAA;AAAA;AAAA,cAPF,eASE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,OAAb;AAAqB,QAAA,OAAO,EAAE,EAA9B;AAAkC,QAAA,UAAU,EAAC,YAA7C;AAAA,kBACGX,SAAS,CAACC,GAAV,CAAeW,KAAD,iBACb,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA,KAAK,CAACR;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAjCD;;KAAMP,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, Cell } from \"recharts\";\nimport { getRandomColor } from \"helpers/getRandomColor\";\n\nconst Bargraph = ({ data, title }) => {\n  const graphData = data.map((chartdata) => {\n    return {\n      value: chartdata,\n      color: getRandomColor(),\n    };\n  });\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div> {title} </div>\n      <BarChart\n        width={500}\n        height={250}\n        data={graphData}\n        margin={{ top: 25, right: 10, left: 0, bottom: 25 }}\n      >\n        <XAxis dataKey=\"value\" fontFamily=\"sans-serif\" tickSize dy=\"25\" />\n        <YAxis hide />\n\n        <Bar dataKey=\"value\" barSize={20} fontFamily=\"sans-serif\">\n          {graphData.map((entry) => (\n            <Cell fill={entry.color} />\n          ))}\n        </Bar>\n      </BarChart>\n    </div>\n  );\n};\n\nexport default Bargraph;\n"]},"metadata":{},"sourceType":"module"}