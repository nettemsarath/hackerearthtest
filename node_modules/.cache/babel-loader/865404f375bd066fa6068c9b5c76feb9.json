{"ast":null,"code":"var _jsxFileName = \"/home/sarath/React-learn/hackerearthtask/src/components/Piegraph.js\";\nimport React from \"react\";\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport { getRandomColor } from \"helpers/getRandomColor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Piegraph = _ref => {\n  let {\n    data,\n    title\n  } = _ref;\n  const graphData = data.map(chartdata => {\n    return {\n      value: chartdata,\n      color: getRandomColor()\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n      width: 600,\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        dataKey: \"value\",\n        valueKey: \"value\",\n        data: graphData,\n        cx: 120,\n        cy: 200,\n        innerRadius: 60,\n        outerRadius: 80,\n        fill: \"#8884d8\",\n        paddingAngle: 5,\n        children: graphData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: entry.color\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Piegraph;\nexport default Piegraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Piegraph\");","map":{"version":3,"sources":["/home/sarath/React-learn/hackerearthtask/src/components/Piegraph.js"],"names":["React","PieChart","Pie","Cell","getRandomColor","Piegraph","data","title","graphData","map","chartdata","value","color","display","justifyContent","alignItems","entry","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAoC,UAApC;AACA,SAASC,cAAT,QAA+B,wBAA/B;;;AAEA,MAAMC,QAAQ,GAAG,QAAqB;AAAA,MAApB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAoB;AACpC,QAAMC,SAAS,GAAGF,IAAI,CAACG,GAAL,CAAUC,SAAD,IAAe;AACxC,WAAO;AACLC,MAAAA,KAAK,EAAED,SADF;AAELE,MAAAA,KAAK,EAAER,cAAc;AAFhB,KAAP;AAID,GALiB,CAAlB;AAOA,sBACE;AACE,IAAA,KAAK,EAAE;AACLS,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,UAAU,EAAE;AAHP,KADT;AAAA,4BAOE;AAAA,sBAAOR,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eASE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE,GAAjB;AAAsB,MAAA,MAAM,EAAE,GAA9B;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,OAAO,EAAC,OADV;AAEE,QAAA,QAAQ,EAAC,OAFX;AAGE,QAAA,IAAI,EAAEC,SAHR;AAIE,QAAA,EAAE,EAAE,GAJN;AAKE,QAAA,EAAE,EAAE,GALN;AAME,QAAA,WAAW,EAAE,EANf;AAOE,QAAA,WAAW,EAAE,EAPf;AAQE,QAAA,IAAI,EAAC,SARP;AASE,QAAA,YAAY,EAAE,CAThB;AAAA,kBAWGA,SAAS,CAACC,GAAV,CAAc,CAACO,KAAD,EAAQC,KAAR,kBACb,QAAC,IAAD;AAA4B,UAAA,IAAI,EAAED,KAAK,CAACJ;AAAxC,WAAY,QAAOK,KAAM,EAAzB;AAAA;AAAA;AAAA;AAAA,gBADD;AAXH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CArCD;;KAAMZ,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { PieChart, Pie, Cell } from \"recharts\";\nimport { getRandomColor } from \"helpers/getRandomColor\";\n\nconst Piegraph = ({ data, title }) => {\n  const graphData = data.map((chartdata) => {\n    return {\n      value: chartdata,\n      color: getRandomColor(),\n    };\n  });\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div> {title} </div>\n\n      <PieChart width={600} height={400}>\n        <Pie\n          dataKey=\"value\"\n          valueKey=\"value\"\n          data={graphData}\n          cx={120}\n          cy={200}\n          innerRadius={60}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          paddingAngle={5}\n        >\n          {graphData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={entry.color} />\n          ))}\n        </Pie>\n      </PieChart>\n    </div>\n  );\n};\n\nexport default Piegraph;\n"]},"metadata":{},"sourceType":"module"}