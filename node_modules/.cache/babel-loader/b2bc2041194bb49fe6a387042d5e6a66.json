{"ast":null,"code":"import _defineProperty from\"/home/sarath/React-learn/hackerearthtask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/home/sarath/React-learn/hackerearthtask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/sarath/React-learn/hackerearthtask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _extraReducers;import{createSlice,createAsyncThunk}from\"@reduxjs/toolkit\";import{fetchChartData}from\"services/chartData\";import{getRandomColor}from\"helpers/getRandomColor\";export var fetchUsersData=createAsyncThunk(\"charts/get\",/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var chartdata,newData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchChartData();case 2:chartdata=_context.sent;newData=chartdata.map(function(data,index){return{type:data.type,id:index,elements:data.elements.map(function(element){return{value:element,color:getRandomColor()};})};});return _context.abrupt(\"return\",newData);case 5:case\"end\":return _context.stop();}}},_callee);})));var initialData={loading:false,chartdata:[],error:false};var chartSlice=createSlice({name:\"charts\",initialState:initialData,reducers:{addItem:function addItem(state,action){state.chartdata.push(action.payload);},updateItem:function updateItem(state,action){state.chartdata[action.payload.id]=action.payload;},removeItem:function removeItem(state,action){state.chartdata.filter(function(data){return data.id!==action.payload.id;});}},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,fetchUsersData.pending,function(state,action){state.loading=true;}),_defineProperty(_extraReducers,fetchUsersData.fulfilled,function(state,action){state.loading=false;state.chartdata=action.payload;}),_defineProperty(_extraReducers,fetchUsersData.rejected,function(state,action){state.loading=false;state.error=true;}),_extraReducers)});export default chartSlice.reducer;var _chartSlice$actions=chartSlice.actions,addItem=_chartSlice$actions.addItem,removeItem=_chartSlice$actions.removeItem,updateItem=_chartSlice$actions.updateItem;export{addItem,removeItem,updateItem};","map":{"version":3,"sources":["/home/sarath/React-learn/hackerearthtask/src/slices/charts.js"],"names":["createSlice","createAsyncThunk","fetchChartData","getRandomColor","fetchUsersData","chartdata","newData","map","data","index","type","id","elements","element","value","color","initialData","loading","error","chartSlice","name","initialState","reducers","addItem","state","action","push","payload","updateItem","removeItem","filter","extraReducers","pending","fulfilled","rejected","reducer","actions"],"mappings":"+eAAA,OAASA,WAAT,CAAsBC,gBAAtB,KAA8C,kBAA9C,CACA,OAASC,cAAT,KAA+B,oBAA/B,CACA,OAASC,cAAT,KAA+B,wBAA/B,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAGH,gBAAgB,CAAC,YAAD,sEAAe,+KACnCC,CAAAA,cAAc,EADqB,QACrDG,SADqD,eAErDC,OAFqD,CAE3CD,SAAS,CAACE,GAAV,CAAc,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC7C,MAAO,CACLC,IAAI,CAAEF,IAAI,CAACE,IADN,CAELC,EAAE,CAAEF,KAFC,CAGLG,QAAQ,CAAEJ,IAAI,CAACI,QAAL,CAAcL,GAAd,CAAkB,SAACM,OAAD,CAAa,CACvC,MAAO,CACLC,KAAK,CAAED,OADF,CAELE,KAAK,CAAEZ,cAAc,EAFhB,CAAP,CAID,CALS,CAHL,CAAP,CAUD,CAXe,CAF2C,iCAcpDG,OAdoD,wDAAf,GAAvC,CAiBP,GAAMU,CAAAA,WAAW,CAAG,CAClBC,OAAO,CAAE,KADS,CAElBZ,SAAS,CAAE,EAFO,CAGlBa,KAAK,CAAE,KAHW,CAApB,CAMA,GAAMC,CAAAA,UAAU,CAAGnB,WAAW,CAAC,CAC7BoB,IAAI,CAAE,QADuB,CAE7BC,YAAY,CAAEL,WAFe,CAG7BM,QAAQ,CAAE,CACRC,OAAO,CAAE,iBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC1BD,KAAK,CAACnB,SAAN,CAAgBqB,IAAhB,CAAqBD,MAAM,CAACE,OAA5B,EACD,CAHO,CAIRC,UAAU,CAAE,oBAACJ,KAAD,CAAQC,MAAR,CAAmB,CAC7BD,KAAK,CAACnB,SAAN,CAAgBoB,MAAM,CAACE,OAAP,CAAehB,EAA/B,EAAqCc,MAAM,CAACE,OAA5C,CACD,CANO,CAORE,UAAU,CAAE,oBAACL,KAAD,CAAQC,MAAR,CAAmB,CAC7BD,KAAK,CAACnB,SAAN,CAAgByB,MAAhB,CAAuB,SAACtB,IAAD,QAAUA,CAAAA,IAAI,CAACG,EAAL,GAAYc,MAAM,CAACE,OAAP,CAAehB,EAArC,EAAvB,EACD,CATO,CAHmB,CAc7BoB,aAAa,mDACV3B,cAAc,CAAC4B,OADL,UACcR,KADd,CACqBC,MADrB,CAC6B,CACtCD,KAAK,CAACP,OAAN,CAAgB,IAAhB,CACD,CAHU,iCAIVb,cAAc,CAAC6B,SAJL,UAIgBT,KAJhB,CAIuBC,MAJvB,CAI+B,CACxCD,KAAK,CAACP,OAAN,CAAgB,KAAhB,CACAO,KAAK,CAACnB,SAAN,CAAkBoB,MAAM,CAACE,OAAzB,CACD,CAPU,iCAQVvB,cAAc,CAAC8B,QARL,UAQeV,KARf,CAQsBC,MARtB,CAQ8B,CACvCD,KAAK,CAACP,OAAN,CAAgB,KAAhB,CACAO,KAAK,CAACN,KAAN,CAAc,IAAd,CACD,CAXU,iBAdgB,CAAD,CAA9B,CA6BA,cAAeC,CAAAA,UAAU,CAACgB,OAA1B,CAEO,wBAA4ChB,UAAU,CAACiB,OAAvD,CAAQb,OAAR,qBAAQA,OAAR,CAAiBM,UAAjB,qBAAiBA,UAAjB,CAA6BD,UAA7B,qBAA6BA,UAA7B,C","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchChartData } from \"services/chartData\";\nimport { getRandomColor } from \"helpers/getRandomColor\";\n\nexport const fetchUsersData = createAsyncThunk(\"charts/get\", async () => {\n  const chartdata = await fetchChartData();\n  const newData = chartdata.map((data, index) => {\n    return {\n      type: data.type,\n      id: index,\n      elements: data.elements.map((element) => {\n        return {\n          value: element,\n          color: getRandomColor(),\n        };\n      }),\n    };\n  });\n  return newData;\n});\n\nconst initialData = {\n  loading: false,\n  chartdata: [],\n  error: false,\n};\n\nconst chartSlice = createSlice({\n  name: \"charts\",\n  initialState: initialData,\n  reducers: {\n    addItem: (state, action) => {\n      state.chartdata.push(action.payload);\n    },\n    updateItem: (state, action) => {\n      state.chartdata[action.payload.id] = action.payload;\n    },\n    removeItem: (state, action) => {\n      state.chartdata.filter((data) => data.id !== action.payload.id);\n    },\n  },\n  extraReducers: {\n    [fetchUsersData.pending](state, action) {\n      state.loading = true;\n    },\n    [fetchUsersData.fulfilled](state, action) {\n      state.loading = false;\n      state.chartdata = action.payload;\n    },\n    [fetchUsersData.rejected](state, action) {\n      state.loading = false;\n      state.error = true;\n    },\n  },\n});\n\nexport default chartSlice.reducer;\n\nexport const { addItem, removeItem, updateItem } = chartSlice.actions;\n"]},"metadata":{},"sourceType":"module"}