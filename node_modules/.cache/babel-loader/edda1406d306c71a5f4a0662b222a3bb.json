{"ast":null,"code":"var _jsxFileName = \"/home/sarath/React-learn/hackerearthtask/src/components/Graph.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Bargraph from \"./Bargraph\";\nimport Piegraph from \"./Piegraph\"; // import useChartData from \"hooks/useChartData\";\n\nimport CustomGraph from \"./CustomGraph\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Graph = () => {\n  _s();\n\n  // const [loading, data, error] = useChartData();\n  const dispath = useDispatch();\n  const {\n    chartdata,\n    loading,\n    error\n  } = useSelector(state => state.charts);\n  console.log(\"chartData...chartData....\", chartdata);\n\n  const handleUpdateGraphItem = newItem => {\n    console.log(\"newItem>>>>>>>>>>\", newItem); // dispath(newItem);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [chartdata.length && !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chartdata.map((chartdata, index) => {\n        if (chartdata.type === \"Bar\") {\n          return /*#__PURE__*/_jsxDEV(Bargraph, {\n            graphData: chartdata.elements,\n            title: \"Bar Graph\",\n            handleUpdateGraphItem: handleUpdateGraphItem\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this);\n        } else if (chartdata.type === \"Pie\") {\n          return /*#__PURE__*/_jsxDEV(Piegraph, {\n            graphData: chartdata.elements,\n            title: \"Pie Graph\",\n            handleUpdateGraphItem: handleUpdateGraphItem\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this);\n        }\n\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(CustomGraph, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Graph, \"MmNaMKDppNDqp3eH52yZjNb+Ryc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/home/sarath/React-learn/hackerearthtask/src/components/Graph.js"],"names":["React","Bargraph","Piegraph","CustomGraph","useDispatch","useSelector","Graph","dispath","chartdata","loading","error","state","charts","console","log","handleUpdateGraphItem","newItem","length","map","index","type","elements"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB;AACA,QAAMC,OAAO,GAAGH,WAAW,EAA3B;AACA,QAAM;AAAEI,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAgCL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,MAAlB,CAAjD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCN,SAAzC;;AACA,QAAMO,qBAAqB,GAAIC,OAAD,IAAa;AACzCH,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,OAAjC,EADyC,CAEzC;AACD,GAHD;;AAIA,MAAIP,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,eACGD,SAAS,CAACS,MAAV,IAAoB,CAACR,OAArB,gBACC;AAAA,gBACGD,SAAS,CAACU,GAAV,CAAc,CAACV,SAAD,EAAYW,KAAZ,KAAsB;AACnC,YAAIX,SAAS,CAACY,IAAV,KAAmB,KAAvB,EAA8B;AAC5B,8BACE,QAAC,QAAD;AAEE,YAAA,SAAS,EAAEZ,SAAS,CAACa,QAFvB;AAGE,YAAA,KAAK,EAAC,WAHR;AAIE,YAAA,qBAAqB,EAAEN;AAJzB,aACOI,KADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATD,MASO,IAAIX,SAAS,CAACY,IAAV,KAAmB,KAAvB,EAA8B;AACnC,8BACE,QAAC,QAAD;AAEE,YAAA,SAAS,EAAEZ,SAAS,CAACa,QAFvB;AAGE,YAAA,KAAK,EAAC,WAHR;AAIE,YAAA,qBAAqB,EAAEN;AAJzB,aACOI,KADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD;;AACD,eAAO,IAAP;AACD,OArBA;AADH;AAAA;AAAA;AAAA;AAAA,YADD,GAyBG,IA1BN,eA2BE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CA5CD;;GAAMb,K;UAEYF,W,EACsBC,W;;;KAHlCC,K;AA8CN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport Bargraph from \"./Bargraph\";\nimport Piegraph from \"./Piegraph\";\n// import useChartData from \"hooks/useChartData\";\nimport CustomGraph from \"./CustomGraph\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Graph = () => {\n  // const [loading, data, error] = useChartData();\n  const dispath = useDispatch();\n  const { chartdata, loading, error } = useSelector((state) => state.charts);\n  console.log(\"chartData...chartData....\", chartdata);\n  const handleUpdateGraphItem = (newItem) => {\n    console.log(\"newItem>>>>>>>>>>\", newItem);\n    // dispath(newItem);\n  };\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      {chartdata.length && !loading ? (\n        <div>\n          {chartdata.map((chartdata, index) => {\n            if (chartdata.type === \"Bar\") {\n              return (\n                <Bargraph\n                  key={index}\n                  graphData={chartdata.elements}\n                  title=\"Bar Graph\"\n                  handleUpdateGraphItem={handleUpdateGraphItem}\n                />\n              );\n            } else if (chartdata.type === \"Pie\") {\n              return (\n                <Piegraph\n                  key={index}\n                  graphData={chartdata.elements}\n                  title=\"Pie Graph\"\n                  handleUpdateGraphItem={handleUpdateGraphItem}\n                />\n              );\n            }\n            return null;\n          })}\n        </div>\n      ) : null}\n      <CustomGraph />\n    </div>\n  );\n};\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}